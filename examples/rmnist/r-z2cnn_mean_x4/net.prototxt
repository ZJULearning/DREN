name: "r-ZCNN_mean_x4"

layer {
  name: "cifar"
  type: "HDF5Data"
  top: "data"
  top: "label"  
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "examples/rmnist/data/train_h5.txt"
    batch_size: 32
  }
}
layer {
  name: "cifar"
  type: "HDF5Data"
  top: "data"
  top: "label"  
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "examples/rmnist/data/test_h5.txt"
    batch_size: 100
  }
}


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 40
    rot_in: true
    pad: 0
    kernel_size: 3
    weight_filler { type: "gaussian" std: 0.05 }
    bias_filler { type: "constant" }
  }
}



layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "drop1"
  type: "Dropout"
  bottom: "conv1"
  top: "conv1"
  dropout_param {
    dropout_ratio: 0.2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 40
    rot_hide: true
    pad: 0
    kernel_size: 3
    weight_filler { type: "gaussian" std: 0.05 }
    bias_filler { type: "constant" }
  }
}



layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool1"
  top: "conv3"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 40
    rot_hide: true
    pad: 0
    kernel_size: 3
    weight_filler { type: "gaussian" std: 0.05 }
    bias_filler { type: "constant" }
  }
}



layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}


layer {
  name: "drop3"
  type: "Dropout"
  bottom: "conv3"
  top: "conv3"
  dropout_param {
    dropout_ratio: 0.2
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 40
    rot_hide: true
    pad: 0
    kernel_size: 3
    weight_filler { type: "gaussian" std: 0.05 }
    bias_filler { type: "constant" }
  }
}



layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}

layer {
  name: "drop4"
  type: "Dropout"
  bottom: "conv4"
  top: "conv4"
  dropout_param {
    dropout_ratio: 0.2
  }
}

layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 40
    rot_hide: true
    pad: 0
    kernel_size: 3
    weight_filler { type: "gaussian" std: 0.05 }
    bias_filler { type: "constant" }
  }
}



layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}

layer {
  name: "drop5"
  type: "Dropout"
  bottom: "conv5"
  top: "conv5"
  dropout_param {
    dropout_ratio: 0.2
  }
}

layer {
  name: "conv6"
  type: "Convolution"
  bottom: "conv5"
  top: "conv6"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 40
    rot_hide: true
    pad: 0
    kernel_size: 3
    weight_filler { type: "gaussian" std: 0.05 }
    bias_filler { type: "constant" }
  }
}



layer {
  name: "relu6"
  type: "ReLU"
  bottom: "conv6"
  top: "conv6"
}

layer {
  name: "drop6"
  type: "Dropout"
  bottom: "conv6"
  top: "conv6"
  dropout_param {
    dropout_ratio: 0.2
  }
}

layer {
  name: "conv7"
  type: "Convolution"
  bottom: "conv6"
  top: "conv7"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 40
    rot_hide: true
    pad: 0
    kernel_size: 4
	channel_shift:true
    weight_filler { type: "gaussian" std: 0.05 }
    bias_filler { type: "constant" }
  }
}

layer{
  name: "slice1"
  type: "Slice"
  bottom: "conv7"
  top: "slice1A"
  top: "slice1B"
  top: "slice1C"
  top: "slice1D"
  slice_param{
    axis: 1
    slice_point: 10
    slice_point: 20
    slice_point: 30
  }
}
layer {
  name: "maxout1"
  type: "Eltwise"
  bottom: "slice1A"
  bottom: "slice1B"
  bottom: "slice1C"
  bottom: "slice1D"
  top: "maxout1"
  eltwise_param {
    operation:SUM
  }
}


layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "maxout1"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "maxout1"
  bottom: "label"
  top: "loss"
}